// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tasker.Web.DataAccess;

namespace Tasker.Web.Migrations
{
    [DbContext(typeof(TaskerDbContext))]
    [Migration("20180714145304_PersonsTask")]
    partial class PersonsTask
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.0-rtm-30799")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Tasker.Web.Models.MyTask", b =>
                {
                    b.Property<int>("MyTaskId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CompletedDate");

                    b.Property<int>("CreatedById");

                    b.Property<DateTime>("CreationDate");

                    b.Property<string>("Description");

                    b.Property<DateTime>("DueDate");

                    b.Property<bool>("IsCompleted");

                    b.Property<DateTime?>("ModificationDate");

                    b.Property<string>("Name");

                    b.Property<int>("ProjectId");

                    b.HasKey("MyTaskId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ProjectId");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("Tasker.Web.Models.Person", b =>
                {
                    b.Property<int>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("PhoneNumber");

                    b.HasKey("PersonId");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("Tasker.Web.Models.PersonTasks", b =>
                {
                    b.Property<int>("MyTaskId");

                    b.Property<int>("PersonId");

                    b.HasKey("MyTaskId", "PersonId")
                        .HasName("PK_PersonTasks");

                    b.HasIndex("PersonId");

                    b.ToTable("PersonTasks");
                });

            modelBuilder.Entity("Tasker.Web.Models.Project", b =>
                {
                    b.Property<int>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ProjectName");

                    b.HasKey("ProjectId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("Tasker.Web.Models.MyTask", b =>
                {
                    b.HasOne("Tasker.Web.Models.Person", "CreatedBy")
                        .WithMany("CreatedByMe")
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Tasker.Web.Models.Project", "Project")
                        .WithMany("Tasks")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Tasker.Web.Models.PersonTasks", b =>
                {
                    b.HasOne("Tasker.Web.Models.MyTask", "MyTask")
                        .WithMany("AssignedPerson")
                        .HasForeignKey("MyTaskId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Tasker.Web.Models.Person", "Person")
                        .WithMany("AssignedToMe")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
